<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>Form</class>
 <widget class="PyDMFrame" name="Form">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>700</width>
    <height>55</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Form</string>
  </property>
  <property name="toolTip">
   <string/>
  </property>
  <property name="whatsThis">
   <string>
    QFrame with support for alarms
    This class inherits from QFrame and PyDMWidget.

    Parameters
    ----------
    parent : QWidget
        The parent widget for the Label
    init_channel : str, optional
        The channel to be used by the widget.
    </string>
  </property>
  <widget class="PyDMPushButton" name="PyDMPushButton_3">
   <property name="geometry">
    <rect>
     <x>560</x>
     <y>0</y>
     <width>121</width>
     <height>23</height>
    </rect>
   </property>
   <property name="toolTip">
    <string/>
   </property>
   <property name="whatsThis">
    <string>
    Basic PushButton to send a fixed value.

    The PyDMPushButton is meant to hold a specific value, and send that value
    to a channel when it is clicked, much like the MessageButton does in EDM.
    The PyDMPushButton works in two different modes of operation, first, a
    fixed value can be given to the :attr:`.pressValue` attribute, whenever the
    button is clicked a signal containing this value will be sent to the
    connected channel. This is the default behavior of the button. However, if
    the :attr:`.relativeChange` is set to True, the fixed value will be added
    to the current value of the channel. This means that the button will
    increment a channel by a fixed amount with every click, a consistent
    relative move

    Parameters
    ----------
    parent : QObject, optional
        Parent of PyDMPushButton

    label : str, optional
        String to place on button

    icon : QIcon, optional
        An Icon to display on the PyDMPushButton

    pressValue : int, float, str
        Value to be sent when the button is clicked

    relative : bool, optional
        Choice to have the button perform a relative put, instead of always
        setting to an absolute value

    init_channel : str, optional
        ID of channel to manipulate

    </string>
   </property>
   <property name="text">
    <string>Apply</string>
   </property>
   <property name="icon">
    <iconset>
     <normaloff>icons/Installing_Updates_22px.png</normaloff>icons/Installing_Updates_22px.png</iconset>
   </property>
   <property name="checkable">
    <bool>false</bool>
   </property>
   <property name="channel" stdset="0">
    <string>ca://${P}${R}CFG_SET.PROC</string>
   </property>
   <property name="pressValue" stdset="0">
    <string>1</string>
   </property>
  </widget>
  <widget class="PyDMPushButton" name="PyDMPushButton_5">
   <property name="geometry">
    <rect>
     <x>560</x>
     <y>30</y>
     <width>121</width>
     <height>23</height>
    </rect>
   </property>
   <property name="toolTip">
    <string/>
   </property>
   <property name="whatsThis">
    <string>
    Basic PushButton to send a fixed value.

    The PyDMPushButton is meant to hold a specific value, and send that value
    to a channel when it is clicked, much like the MessageButton does in EDM.
    The PyDMPushButton works in two different modes of operation, first, a
    fixed value can be given to the :attr:`.pressValue` attribute, whenever the
    button is clicked a signal containing this value will be sent to the
    connected channel. This is the default behavior of the button. However, if
    the :attr:`.relativeChange` is set to True, the fixed value will be added
    to the current value of the channel. This means that the button will
    increment a channel by a fixed amount with every click, a consistent
    relative move

    Parameters
    ----------
    parent : QObject, optional
        Parent of PyDMPushButton

    label : str, optional
        String to place on button

    icon : QIcon, optional
        An Icon to display on the PyDMPushButton

    pressValue : int, float, str
        Value to be sent when the button is clicked

    relative : bool, optional
        Choice to have the button perform a relative put, instead of always
        setting to an absolute value

    init_channel : str, optional
        ID of channel to manipulate

    </string>
   </property>
   <property name="text">
    <string>Save</string>
   </property>
   <property name="icon">
    <iconset>
     <normaloff>icons/Save_22px.png</normaloff>icons/Save_22px.png</iconset>
   </property>
   <property name="checkable">
    <bool>false</bool>
   </property>
   <property name="channel" stdset="0">
    <string>ca://${P}${R}CFG_SAVE.PROC</string>
   </property>
   <property name="pressValue" stdset="0">
    <string>1</string>
   </property>
  </widget>
  <widget class="PyDMPushButton" name="PyDMPushButton_2">
   <property name="geometry">
    <rect>
     <x>160</x>
     <y>0</y>
     <width>121</width>
     <height>23</height>
    </rect>
   </property>
   <property name="toolTip">
    <string/>
   </property>
   <property name="whatsThis">
    <string>
    Basic PushButton to send a fixed value.

    The PyDMPushButton is meant to hold a specific value, and send that value
    to a channel when it is clicked, much like the MessageButton does in EDM.
    The PyDMPushButton works in two different modes of operation, first, a
    fixed value can be given to the :attr:`.pressValue` attribute, whenever the
    button is clicked a signal containing this value will be sent to the
    connected channel. This is the default behavior of the button. However, if
    the :attr:`.relativeChange` is set to True, the fixed value will be added
    to the current value of the channel. This means that the button will
    increment a channel by a fixed amount with every click, a consistent
    relative move

    Parameters
    ----------
    parent : QObject, optional
        Parent of PyDMPushButton

    label : str, optional
        String to place on button

    icon : QIcon, optional
        An Icon to display on the PyDMPushButton

    pressValue : int, float, str
        Value to be sent when the button is clicked

    relative : bool, optional
        Choice to have the button perform a relative put, instead of always
        setting to an absolute value

    init_channel : str, optional
        ID of channel to manipulate

    </string>
   </property>
   <property name="text">
    <string>Default</string>
   </property>
   <property name="icon">
    <iconset>
     <normaloff>icons/Available_Updates_22px.png</normaloff>icons/Available_Updates_22px.png</iconset>
   </property>
   <property name="checkable">
    <bool>false</bool>
   </property>
   <property name="channel" stdset="0">
    <string>ca://${P}${R}CFG_DEFAULT.PROC</string>
   </property>
   <property name="pressValue" stdset="0">
    <string>1</string>
   </property>
  </widget>
  <widget class="PyDMEnumComboBox" name="PyDMEnumComboBox">
   <property name="geometry">
    <rect>
     <x>15</x>
     <y>0</y>
     <width>121</width>
     <height>23</height>
    </rect>
   </property>
   <property name="toolTip">
    <string/>
   </property>
   <property name="whatsThis">
    <string>
    A QComboBox with support for Channels and more from PyDM

    Parameters
    ----------
    parent : QWidget
        The parent widget for the Label
    init_channel : str, optional
        The channel to be used by the widget.

    Signals
    -------
    send_value_signal : int, float, str, bool or np.ndarray
        Emitted when the user changes the value.
    activated : int, str
        Emitted when the user chooses an item in the combobox.
    currentIndexChanged : int, str
        Emitted when the index is changed in the combobox.
    highlighted : int, str
        Emitted when an item in the combobox popup list is highlighted
        by the user.
    </string>
   </property>
   <property name="showUnits" stdset="0">
    <bool>true</bool>
   </property>
   <property name="channel" stdset="0">
    <string>ca://${P}${R}CFG_GET.SCAN</string>
   </property>
  </widget>
  <widget class="PyDMPushButton" name="PyDMPushButton_4">
   <property name="geometry">
    <rect>
     <x>15</x>
     <y>30</y>
     <width>121</width>
     <height>23</height>
    </rect>
   </property>
   <property name="toolTip">
    <string/>
   </property>
   <property name="whatsThis">
    <string>
    Basic PushButton to send a fixed value.

    The PyDMPushButton is meant to hold a specific value, and send that value
    to a channel when it is clicked, much like the MessageButton does in EDM.
    The PyDMPushButton works in two different modes of operation, first, a
    fixed value can be given to the :attr:`.pressValue` attribute, whenever the
    button is clicked a signal containing this value will be sent to the
    connected channel. This is the default behavior of the button. However, if
    the :attr:`.relativeChange` is set to True, the fixed value will be added
    to the current value of the channel. This means that the button will
    increment a channel by a fixed amount with every click, a consistent
    relative move

    Parameters
    ----------
    parent : QObject, optional
        Parent of PyDMPushButton

    label : str, optional
        String to place on button

    icon : QIcon, optional
        An Icon to display on the PyDMPushButton

    pressValue : int, float, str
        Value to be sent when the button is clicked

    relative : bool, optional
        Choice to have the button perform a relative put, instead of always
        setting to an absolute value

    init_channel : str, optional
        ID of channel to manipulate

    </string>
   </property>
   <property name="text">
    <string>Refresh</string>
   </property>
   <property name="icon">
    <iconset>
     <normaloff>icons/Available_Updates_22px.png</normaloff>icons/Available_Updates_22px.png</iconset>
   </property>
   <property name="checkable">
    <bool>false</bool>
   </property>
   <property name="channel" stdset="0">
    <string>ca://${P}${R}CFG_GET.PROC</string>
   </property>
   <property name="pressValue" stdset="0">
    <string>1</string>
   </property>
  </widget>
  <widget class="PyDMPushButton" name="PyDMPushButton_6">
   <property name="geometry">
    <rect>
     <x>160</x>
     <y>30</y>
     <width>121</width>
     <height>23</height>
    </rect>
   </property>
   <property name="toolTip">
    <string/>
   </property>
   <property name="whatsThis">
    <string>
    Basic PushButton to send a fixed value.

    The PyDMPushButton is meant to hold a specific value, and send that value
    to a channel when it is clicked, much like the MessageButton does in EDM.
    The PyDMPushButton works in two different modes of operation, first, a
    fixed value can be given to the :attr:`.pressValue` attribute, whenever the
    button is clicked a signal containing this value will be sent to the
    connected channel. This is the default behavior of the button. However, if
    the :attr:`.relativeChange` is set to True, the fixed value will be added
    to the current value of the channel. This means that the button will
    increment a channel by a fixed amount with every click, a consistent
    relative move

    Parameters
    ----------
    parent : QObject, optional
        Parent of PyDMPushButton

    label : str, optional
        String to place on button

    icon : QIcon, optional
        An Icon to display on the PyDMPushButton

    pressValue : int, float, str
        Value to be sent when the button is clicked

    relative : bool, optional
        Choice to have the button perform a relative put, instead of always
        setting to an absolute value

    init_channel : str, optional
        ID of channel to manipulate

    </string>
   </property>
   <property name="text">
    <string>Clear</string>
   </property>
   <property name="icon">
    <iconset>
     <normaloff>icons/Broom_32px.png</normaloff>icons/Broom_32px.png</iconset>
   </property>
   <property name="checkable">
    <bool>false</bool>
   </property>
   <property name="channel" stdset="0">
    <string>ca://${P}${R}Drv:Copy_CfgStatusToCfgCmd.PROC</string>
   </property>
   <property name="pressValue" stdset="0">
    <string>1</string>
   </property>
  </widget>
 </widget>
 <customwidgets>
  <customwidget>
   <class>PyDMEnumComboBox</class>
   <extends>QComboBox</extends>
   <header>pydm.widgets.enum_combo_box</header>
  </customwidget>
  <customwidget>
   <class>PyDMFrame</class>
   <extends>QFrame</extends>
   <header>pydm.widgets.frame</header>
   <container>1</container>
  </customwidget>
  <customwidget>
   <class>PyDMPushButton</class>
   <extends>QPushButton</extends>
   <header>pydm.widgets.pushbutton</header>
  </customwidget>
 </customwidgets>
 <resources/>
 <connections/>
</ui>
